type Query {
    user(user_Id:Int):User
    users: [User]
    addresses:[Address]
    address(user_id:Int):Address
}


type Mutation {
    saveUser(User: UserInput): User
    saveAddress(Address:AddressInput,user_id:Int):Address
    updateAddress(address_id :Int,city : String,pin:Int):Address
    deleteAddress(addressId:Int):Address
}


type User @key(fields: "userId"){
    userId:Int!
    userName: String!
    userAge: Int
    password:String
    addressList :[Address]
}
type Bank @key(fields:"id userId") @extends {
    id:Int @external
    userId:Int @external
    UserDetails:User



}

type Address{
   pin: Int
   city:String
}


input UserInput {
        userName: String!
        userAge: Int!
        password:String
        addressList :[AddressInput]
}

input AddressInput {
      pin: Int
      city:String

}